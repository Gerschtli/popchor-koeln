// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from 'storyblok';
export interface RichtextStoryblok {
    type: string;
    content?: RichtextStoryblok[];
    marks?: RichtextStoryblok[];
    attrs?: any;
    text?: string;
    [k: string]: any;
}

export interface ExpandableStoryblok {
    expandButtonText?: string;
    contentExpand?: RichtextStoryblok;
    component: 'expandable';
    _uid: string;
    [k: string]: any;
}

export interface GigStoryblok {
    title: string;
    date: string;
    entryTime?: string;
    placeShort: string;
    place: string;
    price?: string;
    linkTickets?: string;
    description?: RichtextStoryblok;
    component: 'gig';
    _uid: string;
    [k: string]: any;
}

export interface GigsStoryblok {
    list?: GigStoryblok[];
    component: 'gigs';
    _uid: string;
    [k: string]: any;
}

export interface GigsReferenceStoryblok {
    showOnlyFuture?: boolean;
    reference?: ISbStoryData<GigsStoryblok> | string;
    component: 'gigs_reference';
    _uid: string;
    [k: string]: any;
}

export interface AssetStoryblok {
    alt: string | null;
    copyright?: string | null;
    fieldtype: 'asset';
    id: number;
    filename: string | null;
    name: string;
    title: string | null;
    focus: string | null;
    meta_data?: {
        [k: string]: any;
    };
    source?: string | null;
    is_external_url?: boolean;
    is_private?: boolean;
    src?: string;
    updated_at?: string;
    width?: number | null;
    height?: number | null;
    aspect_ratio?: number | null;
    public_id?: string | null;
    content_type?: string;
    [k: string]: any;
}

export interface ImageStoryblok {
    image: AssetStoryblok;
    component: 'image';
    _uid: string;
    [k: string]: any;
}

export interface ImageSliderStoryblok {
    images: ImageStoryblok[];
    component: 'image_slider';
    _uid: string;
    [k: string]: any;
}

export interface PageStoryblok {
    id?: string;
    title: string;
    newsletterText?: RichtextStoryblok;
    contactText?: RichtextStoryblok;
    description?: string;
    body?: SectionStoryblok[];
    component: 'page';
    _uid: string;
    [k: string]: any;
}

export interface SectionStoryblok {
    id: string;
    title: string;
    gigs?: GigsReferenceStoryblok[];
    content?: RichtextStoryblok;
    component: 'section';
    _uid: string;
    [k: string]: any;
}

export interface YoutubeVideoStoryblok {
    title: string;
    code: string;
    component: 'youtube_video';
    _uid: string;
    [k: string]: any;
}

export interface YoutubeVideoSliderStoryblok {
    videos: YoutubeVideoStoryblok[];
    component: 'youtube_video_slider';
    _uid: string;
    [k: string]: any;
}
